name    : PutObject
title   : Uploading a String as the Object
intro   : This example shows how to upload a string as the object.
example : <<EOF
var body = "Hello, World!\n";

var params = {
    BucketName    : 'pie-18',
    ObjectName    : 'test-object.txt',
    ContentLength : Buffer.byteLength(body),
    Body          : body,
};

s3.PutObject(params, function(err, data) {
    fmt.dump(err, 'Error');
    fmt.dump(data, 'Data');
});
EOF
---
name    : PutObject
title   : Uploading some MetaData with your Object
intro   : By using the <code>MetaData</code> param, you can set metadata on your object.
example : <<EOF
var body = "Hello, World!\n";

var params = {
    BucketName    : 'pie-18',
    ObjectName    : 'test-object-with-metadata.txt',
    MetaData      : {
        'Username' : 'chilts',
        'UniqueId' : '629f3b9b-49bb-4d0b-b38b-21ad9b132e90'
    },
    ContentLength : Buffer.byteLength(body),
    Body          : body,
};

s3.PutObject(params, function(err, data) {
    fmt.dump(err, 'Error');
    fmt.dump(data, 'Data');
});
EOF
---
name    : PutObject
title   : Setting a Cache-Control header on your object
intro   : Just use the <code>CacheControl</code> parameter.
example : <<EOF
var body = "Hello, World!\n";

var params = {
    BucketName    : 'pie-18',
    ObjectName    : 'test-cache.txt',
    ContentLength : Buffer.byteLength(body),
    Body          : body,
    CacheControl  : 'max-age=3600'
};

s3.PutObject(params, function(err, data) {
    fmt.msg("putting an object with cache-control to pie-18 - expecting success");
    fmt.dump(err, 'Error');
    fmt.dump(data, 'Data');
});
EOF
---
name    : PutObject
title   : Putting a Buffer to S3 as the Object
intro   : This example is similar to putting a string, except 
example : <<EOF
var buf = fs.readFileSync(__filename);

var params = {
    BucketName    : 'pie-18',
    ObjectName    : 'buffer-file.txt',
    ContentLength : buf.length,
    Body          : buf,
};

s3.PutObject(params, function(err, data) {
    fmt.dump(err, 'Error');
    fmt.dump(data, 'Data');
});
EOF
---
name    : PutObject
title   : Streaming a File
intro   : To stream anything to S3, just create a stream and pass it to the <code>Body</code>. Unfortunately S3 requires the <code>ContentLength</code> so you'll have to somehow get this in advance. Here, we're using <code>fs.stat()</code> to do this for us.
example : <<EOF
// you must run fs.stat to get the file size for the content-length header (s3 requires this)
fs.stat(__filename, function(err, file_info) {
    if (err) {
        fmt.dump(err, 'Error reading file');
        return;
    }

    var bodyStream = fs.createReadStream( __filename );

    var params = {
        BucketName    : 'pie-18',
        ObjectName    : __filename,
        ContentLength : file_info.size,
        Body          : bodyStream
    };

    s3.PutObject(params, function(err, data) {
        fmt.dump(err, 'Error');
        fmt.dump(data, 'Data');
    });
});
EOF
---
name    : PutBucketAcl
title   : Using canned ACL to allow full control to an email address
intro   : The Grant* params allow you to set canned ACLs onto your bucket. Check the format you must use against the Amazon docs.
example : <<EOF
var params = {
    BucketName : 'pie-18',
    // similar thing for all the other Grant* params
    GrantFullControl  : 'emailAddress="andychilton@gmail.com"',
};

s3.PutBucketAcl(params, function(err, data) {
    fmt.dump(err, 'Error');
    fmt.dump(data, 'Data');
});
EOF
---
name    : PutBucketAcl
title   : Using the full AccessControlPolicy
intro   : Specifying your own <code>AccessControlPolicy</code> means you can have complete control over your ACL, but it means you have to do a little bit more work to get the format correct.
example : <<EOF
var params = {
    BucketName         : 'pie-18',
    AccessControlPolicy  : {
        Owner : {
            ID : 'sdfgd',
            DisplayName : 'something',
        },
        AccessControlList : [
            {
                Grant : {
                    Grantee : {
                        _attr :  {
                            'xmlns:xsi' : 'http://www.w3.org/2001/XMLSchema-instance',
                            'xsi:type' : 'CanonicalUser',
                        },
                        ID : '1111-2222-3333',
                        DisplayName : 'a name'
                    },
                    Permission : 'READ',
                },
            },
        ]
    },
};

s3.PutBucketAcl(params, function(err, data) {
    // gives a 400 saying that 1111-2222-3333 is an invalid CanonicalUser/ID
    fmt.dump(err, 'Error');
    fmt.dump(data, 'Data');
});
EOF
---
name    : CreateBucket
title   : Create a S3 bucket
intro   : This example show how to create a S3 bucket. Keep in mind that bucket names need to be lowercase! S3 buckets live in 1 region so configuring your S3 endpoint will define which region your bucket will be made in.
example : <<EOF
var params = {
    BucketName : 'awssumtest'
};
s3.CreateBucket(params, function(err, data) {
    fmt.dump(err, 'Error');
    fmt.dump(data, 'Data');
});
EOF
---
name    : DeleteBucket
title   : Delete a S3 bucket
intro   : This example show how to delete a S3 bucket. Keep in mind that bucket names need to be lowercase! S3 buckets live in 1 region so configuring your S3 endpoint will define which region your bucket will be made/deleted in.
example : <<EOF
var params = {
    BucketName : 'awssumtest'
};
s3.DeleteBucket(params, function(err, data) {
    fmt.dump(err, 'Error');
    fmt.dump(data, 'Data');
});
EOF
---
name    : CheckBucket
title   : Check if a S3 bucket exists
intro   : This example show how to check if a S3 bucket exists without retrieving its contents (HEAD). Keep in mind that bucket names need to be lowercase! S3 buckets live in 1 region so configuring your S3 endpoint will define in which region you check if your bucket exists.
example : <<EOF
var params = {
    BucketName : 'awssumtest'
};
s3.CheckBucket(params, function(err, data) {
    fmt.dump(err, 'Error');
    fmt.dump(data, 'Data');
});
EOF
---
name    : DeleteObject
title   : Delete an object inside a S3 bucket
intro   : This example show how to delete an object in a S3 bucket. Keep in mind that bucket names need to be lowercase! S3 buckets live in 1 region so configuring your S3 endpoint will define in which region you check if your bucket exists.
example : <<EOF
var params = {
    BucketName : 'awssumtest',
    ObjectName : 'somefile.js'
};
s3.DeleteObject(params, function(err, data) {
    fmt.dump(err, 'Error');
    fmt.dump(data, 'Data');
});
EOF
---
